name: Build and Deploy React App to Azure VM

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # - name: Debug repository structure
    #   run: |
    #     echo "Current Directory:"
    #     pwd
    #     echo "Directory Contents:"
    #     ls -R
    #   working-directory: .  # Root of the repo

    - name: Install dependencies
      run: npm install
      working-directory: .  # Root of the repo

    # - name: Run tests
    #   run: npm test
    #   working-directory: .  # Root of the repo

    - name: Build the React app
      run: npm run build
      working-directory: .  # Root of the repo

    - name: Build Docker image
      run: |
        docker build -t interval-timer-app:latest .
      working-directory: .  # Root of the repo

    - name: Push Docker image to Docker Hub
      run: |
        docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker tag interval-timer-app:latest ${{ secrets.DOCKER_REGISTRY }}/interval-timer-app:${{ github.sha }}
        docker push ${{ secrets.DOCKER_REGISTRY }}/interval-timer-app:${{ github.sha }}
      working-directory: .  # Root of the repo

    - name: Stop existing container and deploy new one
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.AZURE_VM_IP }}
        username: ${{ secrets.AZURE_VM_USER }}
        key: ${{ secrets.AZURE_SSH_PRIVATE_KEY }}
        port: 22
        script: |
          # Print hostname and verify network
          echo "Trying to reach the host..."
          hostname
          ping -c 4 google.com
          # Check if Docker is running
          docker --version
          systemctl status docker
          
          # Stop the existing container if it is running
          echo "Stopping existing container..."
          docker stop interval-timer-app || true
          docker rm interval-timer-app || true
          
          # Debug output to see if Docker is healthy
          docker ps -a

          # Login to Docker Hub
          echo "Logging in to Docker Hub..."
          docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

          # Pull the new image
          echo "Pulling new image..."
          docker pull ${{ secrets.DOCKER_REGISTRY }}/interval-timer-app:${{ github.sha }}

          # Debug output to see available images
          docker images

          # Deploy the new container
          echo "Running the new container..."
          docker run -d -p ${{ secrets.PORT }}:80 --name interval-timer-app ${{ secrets.DOCKER_REGISTRY }}/interval-timer-app:${{ github.sha }}

          # Verify if the container is running properly
          docker ps